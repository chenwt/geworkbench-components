<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html dir="ltr" lang="en"><head>
<title>ARACNe - Workbench</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="generator" content="MediaWiki 1.16.0">
<meta name="robots" content="noindex,follow">

</head>
<body class="mediawiki ltr ns-0 ns-subject page-ARACNe skin-monobook">
<div id="globalWrapper">
<div id="column-content"><div id="content">
	<a id="top"></a>
	
	<h1 id="firstHeading" class="firstHeading">ARACNe</h1>
	<div id="bodyContent">
		<!-- start content -->
<p><br>
</p><p><br>
</p>
<a name="Overview"></a><h1> <span class="mw-headline" id="Overview">Overview</span></h1>
<p>ARACNe (Algorithm for the Reconstruction of Accurate Cellular 
Networks) (Basso 2005, Margolin 2006a, 2006b) is an 
information-theoretic algorithm used to identify transcriptional 
interactions between gene products using microarray gene expression 
profile data.  By proper selection of samples, a 
tissue/phenotype-specific set of pairwise regulatory interactions can be
 obtained – an “interactome”.   Such an interactome can form the basis 
for more complex analysis of cellular regulatory networks. ARACNe has 
been used to reconstruct networks in mammalian cells through appropriate
 choice of dataset.
</p><p>For a dataset with a simple, monotonic relationship between input
 and output, analysis with a normal (e.g. Pearson's) correlation 
function may be the most suitable method.   Where the input/output 
function is non-linear or irregular, a method based on the calculation 
of mutual information, such as ARACNe, may be able to find relationships
 that Pearson's correlation will not find.  Calculation of the mutual 
information does not require a monotonic relationship. ARACNe has proven
 to be well suited for the reverse engineering of regulatory networks in
 the context of specific cellular types.
</p><p>ARACNe performs best with a dataset containing data from a 
minimum of 100 microarrays (see Margolin, Wang et al. 2006) and 
representing a number of different states of the same cellular system - 
for example,  cells lines of varying phenotype, or cells subjected to a 
variety of experimental perturbations.  Initial work with ARACNe was 
performed using a large collection (about 340) of B-cell lines of 
various phenotypes (Basso et al. 2005).  For the "Adaptive Partitioning"
 option, there is no upper limit on the number of arrays that can be 
included.  For the "Fixed Bandwidth" option, arrays in excess of 300 can
 lead to long computation times.  A subset of the B-Cell dataset, 
derived from 100 arrays, is included with geWorkbench (Bcell-100.exp).
</p><p>ARACNe can perform two separate calculations:
</p>
<ol><li> <b>Mutual Information</b>: The mutual information (MI) of one or more marker's expression profile(s) is calculated against all other active markers.
</li><li> <b>Data Processing Inequality (DPI)</b>: The DPI calculation 
is used to remove the weakest interaction (edge) between any three 
markers. That is, if a MI value is available between each of three 
possible pairings of three markers, the weakest interaction of the three
 will be removed from the output. This has the intent of removing 
indirect interactions. For example, if A-&gt;B-&gt;C, the indirect 
interaction A-&gt;C will likely be weaker than A-&gt;B or B-&gt;C and 
would be removed. A tolerance can be set which relaxes this screening to
 account for uncertainty in the MI calculation.
</li></ol>
<p>Parameters described below allow one to incorporate a list of 
putative transcription factors and optimize the run to discover targets 
that they may regulate.
</p><p>Current versions of geWorkbench (starting with release 1.7.0) use
 a new implementation of ARACNe, ARACNe2, that supports two important 
new features:
</p>
<ol><li> <b>Algorithm</b> - A new algorithm, termed "Adaptive Partitoning", which is much faster than the original "fixed bandwidth" method was added.
</li><li> <b>Mode</b> - The user can choose to custom-calculate optimal run parameters for a given dataset.  See the option "Preprocessing" below.
</li></ol>
<p><br>
Further information on ARACNe is available in the References section below.
</p>
<a name="Setting_up_an_ARACNe_run"></a><h1> <span class="mw-headline" id="Setting_up_an_ARACNe_run">Setting up an ARACNe run</span></h1>
<a name="Prerequisites"></a><h2> <span class="mw-headline" id="Prerequisites">Prerequisites</span></h2>
<ul><li> To use the ARACNe routine, first check that it has been loaded in the <a href="http://wiki.c2b2.columbia.edu/workbench/index.php/Component_Configuration_Manager" title="Component Configuration Manager"> Component Configuration Manager</a>.
</li><li> ARACNe is found in the list of available analysis routines in the lower-right <b>Commands</b> quadrant of geWorkbench.
</li><li> A microarray dataset of sufficient size and phenotypic diversity is needed (See the Overview, above).
</li><li> Load the microarray dataset into the Project Folders 
component.  If available, associate a gene annotation file with the 
dataset.  This will allow the results to be displayed in consolidated 
fashion in Cytoscape by gene rather than by marker (individual probeset)
 name.
</li><li> <b>Warning on too few arrays</b> - if a dataset with fewer 
than 100 microarrays is submitted for ARACNe analysis, a warning message
 will appear notifying the user of the suggested minimum of 100 arrays.
</li></ul>
<a name="Parameters_and_Settings"></a><h2> <span class="mw-headline" id="Parameters_and_Settings">Parameters and Settings</span></h2>
<p><img alt="ARACNe Parameters.png" src="aracne_files/ARACNe_Parameters.png" height="439" width="1082">
</p>
<a name="Algorithm"></a><h3> <span class="mw-headline" id="Algorithm">Algorithm</span></h3>
<p>Two algorithms are offered with which to calculate the pairwise mutual information between markers:
</p>
<ul><li> <b>Adaptive Partitioning</b> (default) - should generally be used for all new calculations.   
</li><li> <b>Fixed Bandwidth</b> - previous, slower algorithm using a fixed Gaussian kernel.  
</li></ul>
<a name="Adaptive_Partitioning"></a><h4> <span class="mw-headline" id="Adaptive_Partitioning">Adaptive Partitioning</span></h4>
<p>Adaptive Partitioning was added with the incorporation of the ARACNe2
 code into geWorkbench ( as of version 1.7.0). Adaptive Partitioning is 
much faster than the original Fixed Bandwidth method, and is also 
considered to produce superior results under certain circumstances.  
Unlike the Fixed Bandwidth method, it does not used a fixed kernel-width
 when calculating the MI.
</p>
<a name="Fixed_Bandwidth"></a><h4> <span class="mw-headline" id="Fixed_Bandwidth">Fixed Bandwidth</span></h4>
<p>Fixed Bandwidth was the original algorithm used in ARACNe and is 
included for compatibility with previous releases.  This method uses a 
kernel-width parameter for a Gaussian function used to calculate the MI.
</p>
<a name="Mode"></a><h3> <span class="mw-headline" id="Mode">Mode</span></h3>
<p>Used to control the calculation and use of runtime parameters from the input dataset. 
</p>
<ul><li> <b>PREPROCESSING</b> - calculates the required parameters and writes them to parameter files.
</li><li> <b>DISCOVERY</b> - The ARACNe mutual information calculation is run.  Uses pre-calculated parameter files as needed if they are present.
</li><li> <b>COMPLETE</b> - Preprocessing and Discovery runs are combined into a single step.
</li></ul>
<a name="Preprocessing"></a><h4> <span class="mw-headline" id="Preprocessing">Preprocessing</span></h4>
<p>In this mode, runtime parameters are calculated, but no MI 
calculation is performed.    Preprocessing for a given combination of 
dataset and algorithm need be run only once.  The results are written to
 one or two files in the geWorkbench root directory.  The names used for
 these files incorporate both the name of the dataset (taken from the 
name shown in the Project Folders component) and the name of the 
algorithm, and thus are specific to the particular combination.  Each 
time ARACNe is run in Discovery mode, it will look for the 
dataset-specific parameter files in its root directory.  If the files 
are not found (Preprocessing has not been run), default parameter values
 will be used.
</p>
<ul><li> <b>Fixed Bandwidth (FBW) algorithm</b> - two files are written 
to the geWorkbench root directory, one containing parameters for 
calculating the kernel width, and the other containing parameters for 
calculating a MI threshold from a specified P-value.
</li><li> <b>Adaptive Partitioning (AP) algorithm</b> - only the 
parameter file for calculating a MI threshold from a specified P-value 
is written.  No kernel-width parameter is used.
</li></ul>
<p>Note - if the name of the expression dataset in the Project Folders 
component is changed after ARACNe preprocessing has been run, the 
corresponding parameter file(s) that was/were created will not be found 
when the discovery run is performed.  Please do not alter the expression
 dataset name after ARACNe preprocessing has been run.
</p>
<a name="Preprocessing_File_Naming"></a><h4> <span class="mw-headline" id="Preprocessing_File_Naming">Preprocessing File Naming</span></h4>
<p>As described just above, ARACNe preprocessing creates new parameter files in the geWorkbench installation directory.
</p><p>Preprocessing parameter file names are formed by appending the following to the dataset name:
</p>
<ul><li> <b>Fixed Bandwidth</b>
<ul><li> Kernel width - "_ARACNe_FBW_kernel.txt" 
</li><li> Threshold - "_ARACNe_FBW_threshold.txt"
</li></ul>
</li><li> <b>Adaptive Partitioning</b>
<ul><li> Threshold - "_ARACNe_AP_threshold.txt"
</li></ul>
</li></ul>
<p>Note - if the name of the expression dataset in the Project Folders 
component is changed after ARACNe preprocessing has been run, the 
corresponding parameter file(s) that was/were created will not be found 
when the discovery run is performed. Please do not alter the expression 
dataset name after ARACNe preprocessing has been run.
</p>
<a name="Preprocessing_files_included_with_geWorkbench"></a><h4> <span class="mw-headline" id="Preprocessing_files_included_with_geWorkbench">Preprocessing files included with geWorkbench</span></h4>
<p>Preprocessing as described above was run on the Bcell-100.exp dataset
 included with geWorkbench.  The resulting ARACNe parameter files are 
also included in the geWorkbench root directory.  They will be used by 
default when the Bcell-100.exp dataset is used in tutorials.  Note that 
if you rerun the preprocessing step, the relevant file(s) will be 
overwritten.
</p><p>The parameter files included in geWorkbench are:
</p>
<ul><li> Bcell-100.exp_ARACNe_AP_threshold.txt - Adaptive Partitioning, Pvalue-to-MI threshold conversion parameters.
</li><li> Bcell-100.exp_ARACNe_FBW_kernel.txt   - Fixed Bandwidth, kernel width calculation parameters.
</li><li> Bcell-100.exp_ARACNe_FBW_threshold.txt - Fixed Bandwidth, Pvalue-to-MI threshold conversion parameters.
</li></ul>
<a name="DISCOVERY"></a><h4> <span class="mw-headline" id="DISCOVERY">DISCOVERY</span></h4>
<p>The ARACNe mutual information and the DPI (if selected) calculations 
are run.  If dataset-specific parameter files are present, they will be 
used as needed (based on settings selected for Kernel Width and 
Threshold).
</p>
<a name="COMPLETE"></a><h4> <span class="mw-headline" id="COMPLETE">COMPLETE</span></h4>
<p>A preprocessing run will be performed followed immediately by a 
Discovery run.  The dataset-specific parameter files created during the 
Preprocssing step will be used if needed (based on settings selected for
 Kernel Width and Threshold).
</p>
<a name="When_is_preprocessing_not_needed.3F"></a><h4> <span class="mw-headline" id="When_is_preprocessing_not_needed.3F">When is preprocessing not needed?</span></h4>
<p>The preprocessing step can be time consuming.  If you are for example
 using Adaptive Partioning, and decide you do not need to specify a 
p-value threshold for accepting edges, then you can just set a MI value 
as the threshold and proceed directly to Discovery mode.   This will 
however make interpreting results more difficult, as raw MI values 
depend on many factors and cannot be directly evaluated.
</p><p>If ARACNe does not find the dataset-specific parameter files it 
needs as described above, it will use by default parameters calculated 
from the B-cell dataset (see Margolin et al., 2006).
</p>
<a name="Hub_Marker.28s.29"></a><h3> <span class="mw-headline" id="Hub_Marker.28s.29">Hub Marker(s)</span></h3>
<p>Specifies which gene markers will be treated as "hubs" in the ARACNE 
mutual information (MI) calculation.  The mutual information is 
calculated for each specified hub marker against all other markers in 
the submitted dataset.  For many uses, it is suggested to use a defined 
list of known transcription factors as hub markers, rather than using 
the "All-vs-All" setting.
</p>
<ul><li> <b>All vs All</b> - The MI of every pair of markers in the dataset is computed, that is, each is used as a hub.
</li><li> <b>From Sets</b> - allows a set of markers defined in the 
Markers component to be chosen from a pulldown menu.  Alternatively, the
 user can type in the names of desired markers directly as a comma 
separated list.
</li><li> <b>From File</b> - allows a comma-separated list of markers to be read in from a file by clicking <b>Load Markers</b>..
</li></ul>
<a name="Hub_marker.28s.29_must_appear_in_active_marker_set"></a><h4> <span class="mw-headline" id="Hub_marker.28s.29_must_appear_in_active_marker_set">Hub marker(s) must appear in active marker set</span></h4>
<p>If a set of markers is activated in the Markers component, rather 
than using all markers, then the chosen hub marker(s)must also be 
included in an active set.  If the hub marker is missing from the active
 sets, then an error dialog will be displayed.  In the below picture, 
the marker 1973_s_at was entered into the hub field without being part 
of a subset of markers that had been activated:
</p><p><img alt="T ARACNe hub not in dataset.png" src="aracne_files/T_ARACNe_hub_not_in_dataset.png" height="130" width="433">
</p>
<a name="Threshold_Type"></a><h3> <span class="mw-headline" id="Threshold_Type">Threshold Type</span></h3>
<a name="Mutual_Info."></a><h4> <span class="mw-headline" id="Mutual_Info.">Mutual Info. </span></h4>
<p>Use the raw MI value calculated by ARACNe.  Only interactions with MI
 above the threshold will be included in the final network.  the MI can 
be any positive value or zero, but not negative.
</p>
<a name="P-Value"></a><h4> <span class="mw-headline" id="P-Value">P-Value</span></h4>
<p>Use a p-value calculated from the MI values as the threshold.  For 
best results, the preprocessing step must be run first to generate the 
parameters needed to calculate p-values from MI values for the 
particular data set.  The P-value should be a number between 0.0 and 
1.0.
</p>
<ul><li> <b>Note</b> - no multiple testing correction is applied to the 
p-value.  You can apply a Bonferroni-type correction to the p-value 
itself if desired.  A built-in option for Bonferroni correction will be 
provided in release 2.3.0.
</li></ul>
<a name="Threshold"></a><h4> <span class="mw-headline" id="Threshold">Threshold</span></h4>
<p>Enter the desired threshold value into the text field.  
</p>
<ul><li> <b>Note</b> - Using a P-value for the threshold is preferred to
 using the raw MI value, as the MI value conveys no information about 
significance.
</li></ul>
<a name="Correction"></a><h4> <span class="mw-headline" id="Correction">Correction</span></h4>
<p>If the threshold type is chosen as P-Value, an option to apply the 
Bonferroni correction is offered in the adjacent pulldown menu.
</p>
<ul><li> No Correction - default
</li><li> Bonferroni Correction - if chosen, the input p-value is divided by the number of targets before being compared.
</li></ul>
<a name="Kernel_width"></a><h3> <span class="mw-headline" id="Kernel_width">Kernel width</span></h3>
<p>The Kernel width is a scaling parameter used for fitting a Gaussian 
function to the data when running the FIXED_BANDWIDTH algorithm only, 
otherwise this field is disabled.  If used, the value can be either 
inferred or specified directly.
</p>
<ul><li> <b>Inferred</b>:   If PREPROCESSING has been run on the dataset
 (mode is set to PREPROCESSING or COMPLETE), the kernel width is 
calculated directly from those results.  If PREPROCESSING has not been 
run, the kernel width is inferred based on parameters fitted to a large 
B-cell dataset (Margolin et al, 2006), extrapolated for the number of 
samples in the dataset being tested.
</li><li> <b>Specify</b>: The user can enter a value for the kernel width directly, e.g. based on a prior calculation with this dataset.
</li></ul>
<a name="DPI_Tolerance"></a><h3> <span class="mw-headline" id="DPI_Tolerance">DPI Tolerance</span></h3>
<p>The Data Processing Inequality can be used to remove the effects of 
indirect interactions, e.g. if TF1-&gt;TF2-&gt;Target, DPI can be used 
to remove the indirect action of TF1 on the target.  It is specifically 
intended to "remove indirect interactions mediated through two 
transcriptional interactions" (ARACNe Manual).   The DPI tolerance 
specifies the degree of sampling error to be accepted, as with a finite 
sample size an exact value MI can not be calculated.  The higher the 
tolerance specified, the fewer the edges that will be removed.
</p>
<ul><li> <b>Do Not Apply</b> - Do not use the DPI. 
</li><li> <b>Apply</b> -  In the text box, enter the percentage of the 
estimated MI to be considered as sampling error, expressed as a real 
number between 0.0 and 1.0.  E.g. for 15%, enter 0.15.
</li></ul>
<p>For a full discussion of the theory and use of DPI in ARACNe, please see <a href="http://www.biomedcentral.com/1471-2105/7/S1/S7" class="external text" rel="nofollow">Margolin et al. (2006)</a>.
</p>
<a name="DPI_Target_List"></a><h3> <span class="mw-headline" id="DPI_Target_List">DPI Target List</span></h3>
<ul><li> The DPI target list can be used to prioritize transcriptional interactions when reverse engineering interaction networks.
</li><li> It prevents transcriptional interactions from being removed by non-transcriptional interactions when DPI is run. 
</li><li> The Target List comes into play when DPI examines a triangle 
of interactions which contains one TF and two non-TFs.  If the weakest 
of the three interactions involves the TF (a TF-nonTF edge), then that 
edge would be removed by a simple application of the DPI.  However, if 
the TF is included on the DPI Target List, the TF-nonTF edge will not be
 removed.
</li><li> That is, use of the Target List prevents edges originating on a TF from being removed in favor of an edge between two non-TFs. 
</li></ul>
<p><br>
The DPI Target List is used to screen out interactions of genes that are
 tightly co-expressed but are not in a regulatory relationship to each 
other, for example genes for two proteins that are in a physical complex
 and hence always produced in the same amounts. A comma-separated list 
can be typed in, or the list can be loaded from an external file. If 
used, the DPI Target List should contain all markers that are annotated 
as transcription factors. Signaling proteins could also be included.
</p>
<ul><li> Details: If the box is checked, the user selects and loads a 
file which specifies markers (which should be a list of one or more 
presumptive transcription factors) which will be given preferential 
treatment during the DPI edge-removal step.
</li></ul>
<p>For further explanation and figures on the DPI Target list, see Chapter 3, note 7 of the <a href="http://www.nature.com/nprot/journal/v1/n2/extref/nprot.2006.106-S1.doc" class="external text" rel="nofollow">ARACNe Manual</a>.
</p>
<a name="Bootstrapping"></a><h3> <span class="mw-headline" id="Bootstrapping">Bootstrapping</span></h3>
<p>Bootstrap analysis can be used to generate a more reliable estimate 
of statistical significance for the interactions. Please see Margolin et
 al. 2006, Nature Protocols, Vol 1, No. 2, pg. 663-672 for further 
details (full reference below). Briefly, repeated runs of ARACNE are 
made, with arrays drawn at random from the full dataset with 
replacement. The same number of arrays is drawn each time as is present 
in the original dataset. A permutation test is then used to obtain a 
null distribution, against which the statistical significance of support
 for each network edge connection (interaction) can be measured.
</p>
<ul><li> <b>Bootstrap number</b>: Specifies the number of bootstrapping runs to perform. 
</li><li> <b>Consensus threshold</b> (for bootstrapping only): After the
 bootstrapping runs are made, a permutation test is used to estimate the
 significance of interactions. The consensus threshold sets the cutoff 
point for calling the interactions significant and returning them in the
 final adjacency matrix
</li></ul>
<ul><li> Note - bootstrapping does not replace the need to filter the 
individual ARACNe runs using a p-value or MI threshold.  That initial 
screening reduces the initial network to a tractable size, and is a 
prerequisite for the bootstrapping permutation step.
</li></ul>
<p><br>
</p>
<a name="Merge_multiple_probesets"></a><h3> <span class="mw-headline" id="Merge_multiple_probesets">Merge multiple probesets</span></h3>
<p>(Replaces the method "Choose edges with highest MI" offered in version 2.2.0).
</p><p>Checking this box will cause interactions to be summarized at the
 gene level for each hub marker.  The links to individual probesets will
 not be retained.  Thus when this option is selected, the adjacency 
matrix will contain a single line per hub gene.  This option depends on 
an annotation file being loaded along with the microarray dataset. 
</p>
<a name="Background"></a><h4> <span class="mw-headline" id="Background">Background</span></h4>
<p>On a microarray analysis platform, genes may be represented by more 
than one marker (probeset).  The mapping between markers and genes is 
specified in the annotation file, if it is read in at the time that the 
data is loaded. The ARACNe analysis in geWorkbench is performed at the 
level of probesets.  In some cases, an interaction between two genes may
 be represented by more than one edge, each such edge involving an 
alternate probeset for at least one of the genes. 
</p><p>When the "Merge multiple probesets" option is not chosen, the 
full ARACNe adjacency matrix, as calculated at the probeset level, will 
be retained and placed as a data node in the Project Folders component.
</p>
<a name="Merge_multiple_probesets_selected"></a><h4> <span class="mw-headline" id="Merge_multiple_probesets_selected">Merge multiple probesets selected</span></h4>
<ul><li> <b>Edges</b> - If a particular hub-target interaction is 
represented by more than one edge, only the edge with the highest mutual
 information (MI) will be retained.  
</li><li> <b>Adjacency Matrix</b> - The final adjacency matrix stored to
 the Project Folders component will contain gene symbols, not the 
particular marker ids.  That is, the data is summarized at the gene 
level.
</li></ul>
<a name="Technical_Note"></a><h4> <span class="mw-headline" id="Technical_Note">Technical Note</span></h4>
<ul><li> Multiple Gene IDs - In some cases, a marker may be annotated to
 more than one gene in the annotation file.   Only the first such gene 
name on an annotation line is used when determining if two probesets map
 to the same gene.
</li></ul>
<a name="Array_and_Marker_Set_Overrides"></a><h3> <span class="mw-headline" id="Array_and_Marker_Set_Overrides">Array and Marker Set Overrides</span></h3>
<ul><li> <b>All Markers</b>: checking this box overrides any activated marker set in the Markers component.
</li><li> <b>All Arrays</b>: checking this box overrides any activated array set in the Arrays/Phenotypes component.
</li></ul>
<a name="Analysis_Actions"></a><h3> <span class="mw-headline" id="Analysis_Actions">Analysis Actions</span></h3>
<ul><li> <b>Analyze</b> - start the ARACNe analysis
</li><li> <b>Save Settings, Delete Settings</b> - The geWorkbench 
analysis framework provides a standard method for saving one or more 
different sets of parameter settings per each type of analysis 
component. Please see the <a href="http://wiki.c2b2.columbia.edu/workbench/index.php/Analysis_Framework" title="Analysis Framework"> Analysis Framework</a> chapter for further details.
</li></ul>
<a name="Services_.28Local_vs_Grid.29"></a><h1> <span class="mw-headline" id="Services_.28Local_vs_Grid.29">Services (Local vs Grid)</span></h1>
<p>ARACNe can be run either locally within geWorkbench, or remotely as a grid job on caGrid.  See the <a href="http://wiki.c2b2.columbia.edu/workbench/index.php/Grid_Services" title="Grid Services"> Grid Services</a> section for further details on setting up a grid job.
</p>
<a name="Special_Note_on_running_in_PREPROCESSING_mode_on_caGRID"></a><h2> <span class="mw-headline" id="Special_Note_on_running_in_PREPROCESSING_mode_on_caGRID">Special Note on running in PREPROCESSING mode on caGRID</span></h2>
<p>When ARACNew is run in PREPROCESSING mode on a grid node, it writes 
the parameter files to its execution directory on the grid node and 
exits.  No file is returned to geWorkbench.  As currently implemented, 
the ARACNe server detects the lack of a file to return (normally it 
returns an adjacency matrix) and reports an error.  This error can 
simply be ignored.  If ARACNe2 is run in COMPLETE or DISCOVERY mode this
 error will not occur because both return adjacency matrices.
</p>
<a name="Adjacency_Matrix_Result_Node"></a><h1> <span class="mw-headline" id="Adjacency_Matrix_Result_Node">Adjacency Matrix Result Node</span></h1>
<p>The result of an ARACNe run is an adjacency matrix, placed as a new 
data node in the Project Folders component as a child of the microarray 
dataset from which it was generated.
</p><p>The adjacency matrix contains one row for each "hub" marker for 
which ARACNe was run.  In this row, all above-threshold interactions 
with targets are listed, together with the MI value of each such 
interaction.
</p><p>The adjacency matrix can be written to disk using either the 
"Save" or the "Export" commands.  "Save" can be found by right-clicking 
on the adjacency matrix node, and "Export" is available in the top level
 "File" menu.  The node to export must be selected.
</p><p>As of release 2.2.1, the adjacency matrix written to disk will 
have one line for each hub marker used in the analysis.  This line, as 
described above, will contain all above-threshold interactions of the 
hub with targets, together with the associated MI values.
</p><p>The file format is described further in the <a href="http://wiki.c2b2.columbia.edu/workbench/index.php/File_Formats" title="File Formats"> File Formats</a> chapter.
</p><p>Prior to release 2.2.1, the adjacency matrix, if written to disk, was not ordered by hub marker.
</p>
<a name="Viewing_ARACNe_results"></a><h1> <span class="mw-headline" id="Viewing_ARACNe_results">Viewing ARACNe results</span></h1>
<ul><li> The result of an ARACNe run is an "adjacency matrix".  it 
contains the mutual information value for each pair of markers which 
exceeded the specified MI threshold.  The adjacency matrix is placed 
into the Project Folders component as a child of the dataset that was 
analyzed.
</li><li> The adjacency matrix can be visualized automatically in the <a href="http://wiki.c2b2.columbia.edu/workbench/index.php/Cytoscape_Network_Viewer" title="Cytoscape Network Viewer"> Cytoscape</a> component, as shown below.
</li></ul>
<p><img alt="ARACNe Example Result.png" src="aracne_files/ARACNe_Example_Result.png" height="507" width="933">
</p><p><br>
The integration between Cytoscape and geWorkbench allows for two-way interactions between them: 
</p>
<ol><li> Nodes selected in Cytoscape appear in the Marker Sets component in the set "Cytoscape selection".  
</li><li> Any set of markers in the Marker Sets component can be 
projected onto the Cytoscape display, which will cause any matching 
nodes there to be highlighted.
</li></ol>
<p>This interaction is demonstrated further on the <a href="http://wiki.c2b2.columbia.edu/workbench/index.php/Cytoscape_Network_Viewer" title="Cytoscape Network Viewer"> Cytoscape tutorial page</a>.
</p><p>The Cytoscape Viewer maintains a list of networks which it has 
currently loaded.  It allows individual loaded networks to be deleted.  
However, the network can be reloaded by clicking on its entry in the 
Project Folders component.  Cytoscape controls are more fully described 
in the <a href="http://wiki.c2b2.columbia.edu/workbench/index.php/Cytoscape_Network_Viewer" title="Cytoscape Network Viewer"> Cytoscape</a> component tutorial.
</p>
<a name="Dataset_History"></a><h1> <span class="mw-headline" id="Dataset_History">Dataset History</span></h1>
<p>Details about each run are maintained in the Dataset History 
component.  With the ARACNe result node highlighted in the Project 
Folders component, the Dataset History display includes the following 
information:
</p>
<ul><li> Input file name
</li><li> Output file name
</li><li> Algorithm 
</li><li> Mode
</li><li> No. bins  
</li><li> MI threshold 
</li><li> MI threshold calculated from P-Value - If supplied, the p-value used to set the MI threshold.
</li><li> DPI tolerance 
</li><li> Hub markers 
</li><li> A listing of the microarrays used.
</li><li> A listing of the markers used.
</li></ul>
<p><br>
</p>
<a name="Example_of_running_ARACNe"></a><h1> <span class="mw-headline" id="Example_of_running_ARACNe">Example of running ARACNe</span></h1>
<p>This example uses the Bcell-100.exp dataset available in the 
data/public_data directory of geWorkbench, and further described on the <a href="http://wiki.c2b2.columbia.edu/workbench/index.php/Download" title="Download" class="mw-redirect">Download</a>
 page.  Briefly, this dataset is composed of 100 Affymetrix HG-U95Av2 
arrays on which various B-cell lines, both normal and cancerous, were 
analyzed.  Thus it explores a potentially wide variety of expression 
phenotypes. 
</p>
<a name="Prerequisites_2"></a><h2> <span class="mw-headline" id="Prerequisites_2">Prerequisites</span></h2>
<ol><li> (Optional) Obtain the annotation file for the HG-U95Av2 array type from the Affymetrix NetAffx website (<a href="http://www.affymetrix.com/analysis/index.affx" class="external free" rel="nofollow">http://www.affymetrix.com/analysis/index.affx</a>).
  The name will be similar to "HG_U95Av2.na31.annot.csv", where na31 is 
the version number.  Loading the annotation file associates gene names 
and other information with the Affymetrix probeset IDs (see the <a href="http://wiki.c2b2.columbia.edu/workbench/index.php/FAQ" title="FAQ"> geWorkbench FAQ</a> for details on obtaining these files).
</li><li> Download the file <a href="http://wiki.c2b2.columbia.edu/workbench/images/4/4f/Mapk_list.csv" class="internal" title="Mapk list.csv">Mapk_list.csv</a> to your computer.
</li><li> Load the Bcell-100.exp dataset into geWorkbench as type "Affymetrix File Matrix".  (See <a href="http://wiki.c2b2.columbia.edu/workbench/index.php/Local_Data_Files" title="Local Data Files"> Local Data Files</a>).
</li><li> When prompted, and if desired, load the annotation file.
</li></ol>
<p>Hub markers can either be loaded directly into the ARACNe component, 
as described below, or can first be loaded into the Markers component as
 a new set, and then this set used to specify the hubs.
</p><p><br>
</p>
<a name="Setting_up_the_parameters_and_starting_ARACNe"></a><h2> <span class="mw-headline" id="Setting_up_the_parameters_and_starting_ARACNe">Setting up the parameters and starting ARACNe</span></h2>
<p>1. In the geWorkbench commands area, select the "ARACNe" analysis.
</p><p>2. Set "Hub Markers" source to be "From File".
</p><p>3. Press "Load Markers" and load the file "Mapk_list.csv" into "Hub Markers".
</p><p>4. Set up the ARACNe parameters as shown
</p>
<ul><li> <b>Mode</b>: Discovery
</li><li> <b>Algorithm</b>: Adaptive Partitioning.
</li><li> <b>Threshold Type</b>: P-value
</li><li> <b>Threshold Value</b>:  0.01 (default)
</li><li> <b>Correction</b>: Bonferroni
</li><li> <b>DPI Tolerance</b>: Do Not Apply
</li></ul>
<p><img alt="ARACNe Parameters Example.png" src="aracne_files/ARACNe_Parameters_Example.png" height="415" width="1051">
</p><p>5. Press the "<b>Analyze</b>" button to launch the job. 
</p><p>6. The resulting network is the one depicted above in the "Viewing ARACNe results" section.
</p>
<a name="Technical_Notes"></a><h1> <span class="mw-headline" id="Technical_Notes">Technical Notes</span></h1>
<ul><li> The set of hub markers, if supplied, is the same as using the 
"-s" subnet option with the standalone ARACNe executable. "... a list of
 probes for which a subnetwork will be constructed".
</li><li> The DPI target list, if supplied, is the same as using the 
"-l" transcription factor option with the standalone ARACNe executable. 
"...a list of probes annotated as transcription factors in the input 
dataset".
<ul><li> "This option is ideal for transcriptional network 
reconstruction. If provided, DPI will not remove any connection of a 
transcription factor (TF) by connections between two probes not 
annotated as TFs. (However, this option has no effect if the list of 
hubs is already limited to transcription factors).
</li></ul>
</li><li> It is recommended to always use bootstrapping when 
reconstructing transcriptional networks.  For larger networks, it may be
 necessary to use the stand-alone version of ARACNe on a computational 
cluster to carry this out.
</li><li> In the stand-alone version of ARACNe, preprocessing is done 
using separate Matlab scripts.  These steps have been directly 
incorporated into the Java version of ARACNe used in geWorkbench, 
ARACNe2.
</li><li> Running with too few arrays can cause NaNs in Adaptive 
partioning preprocessing step, and in a NullPointerException in Fixed 
Bandwidth (Mantis issue 2030).
</li></ul>
<a name="References"></a><h1> <span class="mw-headline" id="References">References</span></h1>
<ul><li> Basso K, Margolin AA, Stolovitzky G, Klein U, Dalla-Favera R, 
Califano A: Reverse engineering of regulatory networks in human B cells.
 Nat Genet 2005, 37(4):382-390 (<a href="http://www.nature.com/ng/journal/v37/n4/abs/ng1532.html" class="external text" rel="nofollow">link to paper</a>).
</li><li> Margolin AA, Nemenman I, Basso K, Wiggins C, Stolovitzky G, 
Dalla Favera R and Califano A, (2006a)  ARACNE: An Algorithm for the 
Reconstruction of Gene Regulatory Networks in a Mammalian Cellular 
Context, BMC Bioinformatics;7(Suppl.1):S7  (<a href="http://www.biomedcentral.com/1471-2105/7/S1/S7" class="external text" rel="nofollow">link to paper</a>)
</li><li> Margolin A, Wang K, Lim WK, Kustagi M, Nemenman I, and 
Califano A (2006b) Reverse Engineering Cellular Networks. Nature 
Protocols 1(2):663-672  (<a href="http://www.nature.com/nprot/journal/v1/n2/abs/nprot.2006.106.html" class="external text" rel="nofollow">link to paper</a>)
<ul><li>  <a href="http://www.nature.com/nprot/journal/v1/n2/suppinfo/nprot.2006.106_S1.html" class="external text" rel="nofollow">Supplementary materials list</a>  
<ul><li> <a href="http://www.nature.com/nprot/journal/v1/n2/extref/nprot.2006.106-S1.doc" class="external text" rel="nofollow">Supplementary materials - ARACNe Manual</a>
</li><li> <a href="http://www.nature.com/nprot/journal/v1/n2/extref/nprot.2006.106-S2.doc" class="external text" rel="nofollow">Supplementary materials - Technical Report</a>
</li></ul>
</li></ul>
</li></ul>

<!-- 
NewPP limit report
Preprocessor node count: 166/1000000
Post-expand include size: 1907/2097152 bytes
Template argument size: 0/2097152 bytes
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key workbench:pcache:idhash:1680-0!1!0!!en!2!printable=1 and timestamp 20120306191550 -->
<div class="printfooter">
Retrieved from "<a href="http://wiki.c2b2.columbia.edu/workbench/index.php/ARACNe">http://wiki.c2b2.columbia.edu/workbench/index.php/ARACNe</a>"</div>
		<div id="catlinks" class="catlinks catlinks-allhidden"></div>		<!-- end content -->
				<div class="visualClear"></div>
	</div>
</div></div>
<div class="visualClear"></div>
<div id="footer">
	<div id="f-poweredbyico"><img src="aracne_files/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" height="31" width="88"></div>
	<ul id="f-list">
		<li id="lastmod"> This page was last modified on 6 March 2012, at 14:14.</li>
	</ul>
</div>
</div>

